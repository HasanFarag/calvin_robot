<?xml version="1.0"?>
<robot xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
  xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
  xmlns:xacro="http://ros.org/wiki/xacro"
  name="calvin_base">

  <xacro:property name="M_PI" value="3.1415926535897931" />

  <xacro:property name="wheel_width" value="0.06" />
  <xacro:property name="wheel_radius" value="0.0985" />
  <xacro:property name="axis_length" value="0.41" />
  <xacro:property name="wheel_x_offset" value="0.225" />
  <xacro:property name="wheel_z_offset" value="0.0" />
  <xacro:property name="turning_adaptation" value="0.69" />
  <xacro:property name="mass" value="10.0" />
  <xacro:property name="imu_stdev" value="0.00017" />

  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <!--<box size="0.55 0.32 0.155" />-->
        <mesh filename="package://calvin_description/meshes/item-base.stl"/>
      </geometry>

      <material name="grey" >
        <color rgba="0.5 0.5 0.5 1" />
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <!--<box size="0.55 0.32 0.155" />-->
        <mesh filename="package://calvin_description/meshes/item-base.stl"/>
      </geometry>
    </collision>
    <inertial>
<!--TODO where does the following come from? -->
<!--TODO add comment to kurt indoor urdf -->
      <mass value="${mass}" />
      <origin xyz="0.0 0.0 -0.040426445" />
      <inertia ixx="${mass * 0.007597848}" ixy="0.0" ixz="0.0"
        iyy="${mass * 0.012357128}" iyz="0.0"
        izz="${mass * 0.015397958}" />
    </inertial>
  </link>

  <gazebo>
    <controller:gazebo_ros_kurt name="kurt_controller" plugin="libgazebo_ros_kurt.so">
      <alwaysOn>true</alwaysOn>
      <cmd_vel_topic_name>cmd_vel</cmd_vel_topic_name>
      <odom_topic_name>odom</odom_topic_name>
      <joint_states_topic_name>joint_states</joint_states_topic_name>
      <left_front_wheel_joint>left_front_wheel_joint</left_front_wheel_joint>
      <left_middle_wheel_joint>left_middle_wheel_joint</left_middle_wheel_joint>
      <left_rear_wheel_joint>left_rear_wheel_joint</left_rear_wheel_joint>
      <right_front_wheel_joint>right_front_wheel_joint</right_front_wheel_joint>
      <right_middle_wheel_joint>right_middle_wheel_joint</right_middle_wheel_joint>
      <right_rear_wheel_joint>right_rear_wheel_joint</right_rear_wheel_joint>
      <wheel_separation>${axis_length}</wheel_separation>
      <wheel_diameter>${2*wheel_radius}</wheel_diameter>
      <turning_adaptation>${turning_adaptation}</turning_adaptation>
      <torque>4.0</torque>
      <max_velocity>0.9</max_velocity>
      <updateRate>40.0</updateRate>
    </controller:gazebo_ros_kurt>
  </gazebo>

  <!-- publish ground truth for pose of base_footprint -->
  <gazebo>
    <controller:gazebo_ros_p3d name="base_footprint_controller" plugin="libgazebo_ros_p3d.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>30.0</updateRate>
      <bodyName>base_footprint</bodyName>
      <topicName>base_footprint_pose_ground_truth</topicName>
      <gaussianNoise>0.0</gaussianNoise>
      <frameName>map</frameName>
      <interface:position name="base_footprint_p3d_position_iface" />
    </controller:gazebo_ros_p3d>
  </gazebo>

  <!-- inertial measurement unit for gazebo -->
  <xacro:imu_gazebo link="base_link" imu_topic="imu" update_rate="100.0" stdev="${imu_stdev}" />

  <xacro:macro name="calvin_wheel" params="name xyz rotate_visual">
    <!-- rotate_visual: 0 for right side, 1 for left side -->
    <link name="${name}_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="${M_PI/2} 0 ${rotate_visual * M_PI}" />
        <geometry>
          <!--<cylinder length="${wheel_width}" radius="${wheel_radius}"/>-->
          <mesh filename="package://calvin_description/meshes/wheel01.stl" />
        </geometry>

        <material name="blackish">
          <color rgba="0.2 0.2 0.2 1"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
        <!--<origin xyz="0 0 0" rpy="0 0 0" />-->
        <geometry>
          <!-- using STL for collision to fix http://answers.ros.org/question/2368/gazebo-model-wheels-slip-after-upgrade-to-electric -->
          <!--<cylinder length="${wheel_width}" radius="${wheel_radius}"/>-->
          <mesh filename="package://calvin_description/meshes/wheel01.stl" />
        </geometry>
      </collision>
      <inertial>
<!--TODO where does the following come from? -->
<!--TODO add comment to kurt indoor urdf -->
        <mass value="0.075" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.000066031" ixy="0.0" ixz="0.0"
          iyy="0.000129786" iyz="0.0"
          izz="0.000066031" />
      </inertial>
    </link>

    <!-- friction parameters -->
    <gazebo reference="${name}_wheel_link">
      <!-- PR2: -->
      <!-- 
        <mu1 value="100.0" />
        <mu2 value="100.0" />
        <kp  value="1000000.0" />
        <kd  value="1.0" /> -->

      <!-- Turtlebot: -->
      <mu1 value="10"/>
      <mu2 value="10"/>
      <kp value="100000000.0"/>
      <kd value="10000.0"/>
      <fdir1 value="1 0 0"/>  <!-- see http://answers.ros.org/question/607/rotation-error-in-gazebo-simulation -->
      <material value="Gazebo/FlatBlack" />
    </gazebo>

    <joint name="${name}_wheel_joint" type="continuous">
      <origin xyz="${xyz}" rpy="0 0 0" />
      <parent link="base_link"/>
      <child link="${name}_wheel_link"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <xacro:calvin_wheel name="left_front" xyz="${wheel_x_offset} ${axis_length/2} ${wheel_z_offset}" rotate_visual="1" />
  <xacro:calvin_wheel name="left_middle" xyz="0 ${axis_length/2} ${wheel_z_offset}" rotate_visual="1" />
  <xacro:calvin_wheel name="left_rear" xyz="${-wheel_x_offset} ${axis_length/2} ${wheel_z_offset}" rotate_visual="1" />
  <xacro:calvin_wheel name="right_front" xyz="${wheel_x_offset} ${-axis_length/2} ${wheel_z_offset}" rotate_visual="0" />
  <xacro:calvin_wheel name="right_middle" xyz="0 ${-axis_length/2} ${wheel_z_offset}" rotate_visual="0" />
  <xacro:calvin_wheel name="right_rear" xyz="${-wheel_x_offset} ${-axis_length/2} ${wheel_z_offset}" rotate_visual="0" />

  <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin,
       navigation stack dedpends on this frame -->
  <link name="base_footprint">
    <!-- this needs to have a fake inertial element, otherwise all children will be ignored by Gazebo -->
    <inertial>
      <mass value="0.0001" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
        iyy="0.0001" iyz="0.0"
        izz="0.0001" />
    </inertial>
  </link>

  <joint name="base_footprint_joint" type="fixed">
    <origin xyz="0 0 ${-wheel_z_offset + wheel_radius}" rpy="0 0 0" />
    <parent link="base_footprint"/>
    <child link="base_link" />
  </joint>

</robot>
