<?xml version="1.0"?>
<launch>
  <!-- load calvin urdf -->
  <include file="$(find calvin_description)/launch/upload_calvin.launch"/>

  <!-- which joints does this katana instance control? (for teleop etc.) -->
  <rosparam command="load" file="$(find katana)/config/katana_arm_controllers.yaml" />

  <!-- remap katana_gripper_grasp_controller topic names; this has to be stated before loading Gazebo! -->
  <remap from="posture_action_name" to="/gripper_grasp_posture_controller" />
  <remap from="grasp_query_name" to="/gripper_grasp_status" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <include file="$(find calvin_gazebo)/launch/spawn_calvin.launch" />

  <!-- EKF -->
  <include file="$(find calvin_gazebo)/launch/ekf.launch"/>

  <!-- Default Controllers -->
  <rosparam command="load" file="$(find katana_arm_gazebo)/config/katana_arm_controller.yaml" />
  <rosparam command="load" file="$(find katana_arm_gazebo)/config/katana_gripper_controller.yaml" />
  <rosparam command="load" file="$(find calvin_gazebo)/config/calvin_pole_controllers.yaml" />

  <!-- Robot state publisher -->
  <node pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
    <param name="tf_prefix" type="string" value="" />
  </node>

  <!-- Controllers that come up loaded -->
  <node name="default_loaded_controllers_spawner"
    pkg="controller_manager" type="spawner" output="screen" respawn="false"
    args="katana_arm_controller kinect_pitch_joint_controller webcam_pitch_joint_controller joint_state_controller" />

  <!-- Fake calibration -->
  <node pkg="rostopic" type="rostopic" name="fake_joint_calibration"
    args="pub /calibrated std_msgs/Bool true" />

  <!-- Calvin joint commander -->
  <include file="$(find calvin_joint_commander)/launch/calvin_joint_commander.launch" >
    <arg name="publish_joint_states" value="False" />
    <arg name="publish_controller_commands" value="True" />
  </include>

  <!-- filter chains -->
  <include file="$(find calvin_bringup)/launch/laser_filter_chain.launch"/>
  <include file="$(find calvin_bringup)/launch/xtion_filter_chain.launch"/>
</launch>
